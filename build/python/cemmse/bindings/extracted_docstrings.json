{"gr::cemmse::demod_refsignals": "Reference signals demodulator.\n\nETSI EN 300 744 Clause 4.5 \nData input format: \ncomplex(real(float), imag(float)). \nData output format: \ncomplex(real(float), imag(float)).\n\nConstructor Specific Documentation:\n\nCreate Reference signals demodulator.\n\nArgs:\n    itemsize : size of an in/out item.\n    ninput : input stream length.\n    noutput : output stream length.\n    snr : signal-to-noise ratio.\n    constellation : constellation used.\n    hierarchy : hierarchy used.\n    code_rate_HP : high priority stream code rate.\n    code_rate_LP : low priority stream code rate.\n    guard_interval : guard interval used.\n    transmission_mode : transmission mode used.\n    include_cell_id : include or not Cell ID.\n    cell_id : value of the Cell ID.", "gr::cemmse::demod_refsignals::make": "Reference signals demodulator.\n\nETSI EN 300 744 Clause 4.5 \nData input format: \ncomplex(real(float), imag(float)). \nData output format: \ncomplex(real(float), imag(float)).\n\nConstructor Specific Documentation:\n\nCreate Reference signals demodulator.\n\nArgs:\n    itemsize : size of an in/out item.\n    ninput : input stream length.\n    noutput : output stream length.\n    snr : signal-to-noise ratio.\n    constellation : constellation used.\n    hierarchy : hierarchy used.\n    code_rate_HP : high priority stream code rate.\n    code_rate_LP : low priority stream code rate.\n    guard_interval : guard interval used.\n    transmission_mode : transmission mode used.\n    include_cell_id : include or not Cell ID.\n    cell_id : value of the Cell ID.", "gr::cemmse::refsignals": "Reference signals generator.\n\nETSI EN 300 744 Clause 4.5 \nData input format: \ncomplex(real(float), imag(float)). \nData output format: \ncomplex(real(float), imag(float)).\n\nConstructor Specific Documentation:\n\nCreate Reference signals generator.\n\nArgs:\n    itemsize : size of an in/out item.\n    ninput : input stream length.\n    noutput : output stream length.\n    snr : signal-to-noise ratio value\n    constellation : constellation used.\n    hierarchy : hierarchy used.\n    code_rate_HP : high priority stream code rate.\n    code_rate_LP : low priority stream code rate.\n    guard_interval : guard interval used.\n    transmission_mode : transmission mode used.\n    include_cell_id : include or not Cell ID.\n    cell_id : value of the CTo solve the problem, we need to include the header file that declares the ref_signals_impl class.ell ID.", "gr::cemmse::refsignals::make": "Reference signals generator.\n\nETSI EN 300 744 Clause 4.5 \nData input format: \ncomplex(real(float), imag(float)). \nData output format: \ncomplex(real(float), imag(float)).\n\nConstructor Specific Documentation:\n\nCreate Reference signals generator.\n\nArgs:\n    itemsize : size of an in/out item.\n    ninput : input stream length.\n    noutput : output stream length.\n    snr : signal-to-noise ratio value\n    constellation : constellation used.\n    hierarchy : hierarchy used.\n    code_rate_HP : high priority stream code rate.\n    code_rate_LP : low priority stream code rate.\n    guard_interval : guard interval used.\n    transmission_mode : transmission mode used.\n    include_cell_id : include or not Cell ID.\n    cell_id : value of the CTo solve the problem, we need to include the header file that declares the ref_signals_impl class.ell ID.", "gr::cemmse::demod_refsignals_impl": "", "gr::cemmse::demod_refsignals_impl::is_sync_start": "", "gr::cemmse::demod_refsignals_impl::demod_refsignals_impl": "", "gr::cemmse::demod_refsignals_impl::~demod_refsignals_impl": "", "gr::cemmse::demod_refsignals_impl::forecast": "", "gr::cemmse::demod_refsignals_impl::general_work": "", "gr::cemmse::dvbt_pilot_gen": "", "gr::cemmse::dvbt_pilot_gen::generate_prbs": "", "gr::cemmse::dvbt_pilot_gen::set_tps_bits": "", "gr::cemmse::dvbt_pilot_gen::set_symbol_index": "", "gr::cemmse::dvbt_pilot_gen::get_symbol_index": "", "gr::cemmse::dvbt_pilot_gen::set_tps_data": "", "gr::cemmse::dvbt_pilot_gen::get_tps_data": "", "gr::cemmse::dvbt_pilot_gen::reset_pilot_generator": "", "gr::cemmse::dvbt_pilot_gen::get_current_spilot": "", "gr::cemmse::dvbt_pilot_gen::get_spilot_value": "", "gr::cemmse::dvbt_pilot_gen::set_spilot_value": "", "gr::cemmse::dvbt_pilot_gen::advance_spilot": "", "gr::cemmse::dvbt_pilot_gen::get_first_spilot": "", "gr::cemmse::dvbt_pilot_gen::get_last_spilot": "", "gr::cemmse::dvbt_pilot_gen::get_next_spilot": "", "gr::cemmse::dvbt_pilot_gen::process_spilot_data": "", "gr::cemmse::dvbt_pilot_gen::set_channel_gain": "", "gr::cemmse::dvbt_pilot_gen::get_current_cpilot": "", "gr::cemmse::dvbt_pilot_gen::get_cpilot_value": "", "gr::cemmse::dvbt_pilot_gen::advance_cpilot": "", "gr::cemmse::dvbt_pilot_gen::process_cpilot_data": "", "gr::cemmse::dvbt_pilot_gen::compute_oneshot_csft": "", "gr::cemmse::dvbt_pilot_gen::frequency_correction": "", "gr::cemmse::dvbt_pilot_gen::get_current_tpilot": "", "gr::cemmse::dvbt_pilot_gen::get_tpilot_value": "", "gr::cemmse::dvbt_pilot_gen::advance_tpilot": "", "gr::cemmse::dvbt_pilot_gen::format_tps_data": "", "gr::cemmse::dvbt_pilot_gen::generate_bch_code": "", "gr::cemmse::dvbt_pilot_gen::verify_bch_code": "", "gr::cemmse::dvbt_pilot_gen::process_tps_data": "", "gr::cemmse::dvbt_pilot_gen::set_chanestim_carrier": "", "gr::cemmse::dvbt_pilot_gen::get_current_payload": "", "gr::cemmse::dvbt_pilot_gen::advance_chanestim": "", "gr::cemmse::dvbt_pilot_gen::set_payload_carrier": "", "gr::cemmse::dvbt_pilot_gen::advance_payload": "", "gr::cemmse::dvbt_pilot_gen::process_payload_data": "", "gr::cemmse::dvbt_pilot_gen::dvbt_pilot_gen": "", "gr::cemmse::dvbt_pilot_gen::~dvbt_pilot_gen": "", "gr::cemmse::dvbt_pilot_gen::update_output": "ETSI EN 300 744 Clause 4.5. \nUpdate a set of carriers with the pilot signals.", "gr::cemmse::refsignals_impl": "", "gr::cemmse::refsignals_impl::refsignals_impl": "", "gr::cemmse::refsignals_impl::~refsignals_impl": "", "gr::cemmse::refsignals_impl::forecast": "", "gr::cemmse::refsignals_impl::general_work": ""}